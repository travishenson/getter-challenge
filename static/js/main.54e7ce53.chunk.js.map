{"version":3,"sources":["logo.png","Components/Card/index.js","Components/Deck/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","i","x","y","rot","scale","trans","bind","data","name","photo","div","style","transform","interpolate","className","src","alt","workersData","require","to","Math","random","delay","r","s","Deck","useState","Set","gone","useSprings","length","from","props","set","useGesture","index","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map","App","href","target","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e7ce53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b6a576c3.png\";","import { string } from 'prop-types';\nimport { animated, interpolate } from 'react-spring';\n\nimport './style.css';\n\nexport default function Card({ i, x, y, rot, scale, trans, bind, data }) {\n  const { name, photo } = data[i];\n\n  return (\n    <animated.div\n      key={i}\n      style={{\n        transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`)\n      }}\n    >\n      <animated.div\n        {...bind(i)}\n        style={{\n          transform: interpolate([rot, scale], trans)\n        }}\n      >\n        <div className='card'>\n          <div className='inner-card'>\n            <img \n              className='profile-photo' \n              src={photo} \n              alt={`${name} profile photo`} \n            />\n            <h2>{name}</h2>\n          </div>\n        </div>\n      </animated.div>\n    </animated.div>\n  )\n} \n\nCard.propTypes = {\n  name: string,\n  photo: string\n};","import { useState } from 'react';\nimport { useSprings } from 'react-spring';\nimport { useGesture } from 'react-with-gesture';\n\nimport './style.css';\n\nimport Card from '../Card';\n\n// Import workers from workers.json\nlet workersData = require('../../api/workers.json');\n\n// These variables set the to and from points for the react-spring library\nconst to = i => ({\n  x: 0,\n  y: i * -10,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100\n});\n\nconst from = i => ({ rot: 0, scale: 1.25, y: 0 });\n\nconst trans = (r, s) =>\n  `perspective(0px) rotateX(0deg) rotateY(1deg) rotateZ(0deg) scale(${s})`;\n\nexport default function Deck() {\n  const [ gone ] = useState(() => new Set());\n\n  const [props, set] = useSprings(workersData.length, i => ({\n    to: to(i),\n    from: from(i)\n  }));\n\n  // useGesture is a hook that allows the tracking of user gestures\n  // Settings and config are stored in the bind const\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity\n    }) => {\n      const trigger = velocity > 0.5;\n\n      const dir = xDir < 0 ? -1 : 1;\n\n      if (!down && trigger) gone.add(index);\n\n      set(i => {\n        if (index !== i) return;\n        const isGone = gone.has(index);\n\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n\n        const scale = down ? 1.1 : 1;\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 }\n        };\n      });\n\n      if (!down && gone.size === workersData.length)\n        setTimeout(() => gone.clear() || set(i => to(i)), 600);\n    }\n  );\n\n  return props.map(({ x, y, rot, scale }, i) => (\n    <Card\n      key={i}\n      i={i}\n      x={x}\n      y={y}\n      rot={rot}\n      scale={scale}\n      trans={trans}\n      data={workersData}\n      bind={bind}\n    />\n  ));\n}","// Import assets and stylesheet\nimport logo from './logo.png';\nimport './App.css';\n\n// Import components for app\nimport { Deck } from './Components';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h1 className='App-heading'>Stunt Double Finder</h1>\n        <h2 className='App-subheading'>\n          Created By <a href='https://www.travishenson.com' target='_new'>Travis Henson</a> For\n        </h2>\n        <img src={logo} className='App-logo' alt='logo' />\n      </header>\n      <main>\n        <div className='card-container'>\n          <Deck />\n        </div>\n        <div className='icon-container'>\n          <div>Swipe Left for No</div>\n          <div>Swipe Right for Yes</div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}